plugins {
  id 'org.ec4j.editorconfig' version '0.0.3'
  id 'org.xtext.builder' version '2.0.8'
  id 'io.github.0ffz.github-packages' version '1.2.1'
}

editorconfig {
  excludes = [
    '**/generated',
    '**/xtext-gen',
    '**/bin',
    '**/.*',
    'gradlew*',
    '**/out',
    '**/node_modules',
    '**/*.vsix'
  ]
}

check.dependsOn(editorconfigCheck)

subprojects {
  ext {
    versions = [
      'ace':            '1.3.3',
      'jetty':          '9.4.14.v20181114',
      'jquery':         '3.3.1-1',
      'junit_jupiter':  '5.4.2',
      'junit_platform': '1.4.2',
      'metafacture':    '5.3.1',
      'mockito':        '2.27.0',
      'requirejs':      '2.3.6',
      'slf4j':          '1.7.21',
      'xtext':          '2.17.0',
      'guava':          '29.0-jre'
    ]
  }

  group = 'org.metafacture'
  version = '0.2.0-rc8'

  apply plugin: 'checkstyle'
  apply plugin: 'eclipse'
  apply plugin: 'java'
  apply plugin: 'org.xtext.builder'
  apply plugin: 'maven-publish'

  apply from: "${rootDir}/gradle/source-layout.gradle"

  check.dependsOn(javadoc)

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  repositories {
    mavenCentral()
    maven githubPackage.invoke("metafacture")
  }

  dependencies {
    implementation platform("org.eclipse.xtext:xtext-dev-bom:${versions.xtext}")
  }

  configurations.all {
    exclude group: 'asm'
  }

  checkstyle {
    toolVersion '8.30'
  }

  tasks.withType(JavaCompile) {
    'all -processing -rawtypes -serial'.split().each {
      options.compilerArgs << "-Xlint:${it}"
    }

    options.compilerArgs << '-Werror'
  }

  javadoc {
    // Can't exclude generated files based on source path
    // (cf. https://stackoverflow.com/a/47711311).
    //exclude '**/xtext-gen'
    source = source.filter(f -> !f.getPath().contains('xtext-gen'))

    options {
      addBooleanOption 'Xwerror', true
    }
  }

  publishing {
    publications {
      mavenArtifacts(MavenPublication) {
        from components.java
        afterEvaluate {
          groupId = project.group
          artifactId = project.name
        }
      }
    }
    repositories {
      maven {
        name = 'LocalEmbedded'
        // run generated gradle task `./gradlew
        // publishMavenArtifactsPublicationToLocalEmbeddedRepository`
        // to publish all subprojects into the same local embedded repo:
        url = "file://${rootDir}/build/repo"
      }
      maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/metafacture/metafacture-fix"
        credentials {
          username = System.getenv("GITHUB_ACTOR")
          password = System.getenv("GITHUB_TOKEN")
        }
      }
    }
  }
}

task installServer(type: Copy) {
  dependsOn(':metafix-ide:installDist')
  from "metafix-ide/build/install/xtext-server"
  into "metafix-vsc/xtext-server"
}
